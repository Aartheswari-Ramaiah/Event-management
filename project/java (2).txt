package com.mycompany.eventregistrationsystem;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;

public class EventRegistrationSystem 
{
static DefaultTableModel model = new DefaultTableModel();
public static void main(String[] args) 
{
showLoginScreen();
}
private static void showLoginScreen() 
{
JFrame loginFrame = new JFrame("Event System Login");
JPanel panel = new JPanel(new GridLayout(3, 2));
JTextField userField = new JTextField();
JPasswordField passField = new JPasswordField();
JButton loginButton = new JButton("Login");
panel.add(new JLabel("Username:"));
panel.add(userField);
panel.add(new JLabel("Password:"));
panel.add(passField);
panel.add(new JLabel());
panel.add(loginButton);

loginFrame.add(panel);
loginFrame.setSize(300, 150);
loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
loginFrame.setLocationRelativeTo(null);
loginFrame.setVisible(true);

 loginButton.addActionListener(e -> {
        String user = userField.getText();
        String pass = new String(passField.getPassword());
 if (user.equals("admin") && pass.equals("event123")) 
{
          loginFrame.dispose();
          showEventGUI();
 } 
else 
{
         JOptionPane.showMessageDialog(null, "Invalid Login");
}});
}
private static void showEventGUI() {
        JFrame frame = new JFrame("Event Registration Management");
       JTable table = new JTable(model);
        model.setColumnIdentifiers(new Object[]{"Registration ID", "Attendee Name", "Event Name", "Date", "Time"});
       fetchRegistrations();
       JButton addBtn = new JButton("Add Registration");
       JButton deleteBtn = new JButton("Delete Registration");
       JButton updateBtn = new JButton("Update Registration");

       addBtn.addActionListener(e -> showAddRegistrationDialog());
       deleteBtn.addActionListener(e -> showDeleteRegistrationDialog());
       updateBtn.addActionListener(e -> showUpdateRegistrationDialog());

       JPanel buttonPanel = new JPanel();
       buttonPanel.add(addBtn);
       buttonPanel.add(deleteBtn);
       buttonPanel.add(updateBtn);

       frame.add(new JScrollPane(table), BorderLayout.CENTER);
       frame.add(buttonPanel, BorderLayout.SOUTH);

       frame.setSize(800, 400);
       frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       frame.setLocationRelativeTo(null);
       frame.setVisible(true);
    }
    private static void fetchRegistrations() {
         model.setRowCount(0);
    try {
      String url ="jdbc:mysql://localhost:3306/eventdb?useSSL=false&serverTimezone=UTC";
      String user = "root";
      String password = "Varaathi_19";

       Connection conn = DriverManager.getConnection(url, user, password);
       Statement stmt = conn.createStatement();
       ResultSet rs = stmt.executeQuery("SELECT * FROM event_registrations");

       while (rs.next()) {
               model.addRow(new Object[] {
                     rs.getInt("registration_id"),
                     rs.getString("attendee_name"),
                     rs.getString("event_name"),
                     rs.getDate("event_date"),
                     rs.getTime("event_time")
                }):
           }

            conn.close();
        } 
          catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Error fetching registrations: " +             ex.getMessage());
        }}
       private static void showAddRegistrationDialog() {
        JTextField nameField = new JTextField();
        JTextField eventField = new JTextField();
        JTextField dateField = new JTextField("YYYY-MM-DD");
        JTextField timeField = new JTextField("HH:MM:SS");

        JPanel panel = new JPanel(new GridLayout(4, 2));
        panel.add(new JLabel("Attendee Name:"));
        panel.add(nameField);
        panel.add(new JLabel("Event Name:"));
        panel.add(eventField);
        panel.add(new JLabel("Date (YYYY-MM-DD):"));
        panel.add(dateField);
        panel.add(new JLabel("Time (HH:MM:SS):"));
        panel.add(timeField);

        int result = JOptionPane.showConfirmDialog(null, panel, "Add Registration", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            try {
    String url = "jdbc:mysql://localhost:3306/eventdb?useSSL=false&serverTimezone=UTC";
    String user = "root";
    String password = "A@191005";
    Connection conn = DriverManager.getConnection(url, user, password);
    PreparedStatement stmt = conn.prepareStatement("INSERT INTO event_registrations (attendee_name, event_name, event_date, event_time) VALUES (?, ?, ?, ?)");
       stmt.setString(1, nameField.getText());
       stmt.setString(2, eventField.getText());
       stmt.setDate(3, Date.valueOf(dateField.getText()));
       stmt.setTime(4, Time.valueOf(timeField.getText()));
       int inserted = stmt.executeUpdate();
              conn.close();

       if (inserted > 0) {
            JOptionPane.showMessageDialog(null, "Registration added successfully.");
            fetchRegistrations();
                } 
       else {
           JOptionPane.showMessageDialog(null, "Failed to add registration.");
               }
                        } 
        catch (Exception ex) {
                 JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
              }
                   }
                       }
        private static void showDeleteRegistrationDialog() {
        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

       int result = JOptionPane.showConfirmDialog(null, scrollPane, "Select a Row to Delete",      JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            int row = table.getSelectedRow();
         if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row.");
                return;
            }

        int regId = (int) model.getValueAt(row, 0);
            try {
     String url = "jdbc:mysql://localhost:3306/eventdb?useSSL=false&serverTimezone=UTC";
     String user = "root";
     String password = "A@191005";

     Connection conn = DriverManager.getConnection(url, user, password);
     PreparedStatement stmt = conn.prepareStatement("DELETE FROM event_registrations WHERE registration_id = ?");
     stmt.setInt(1, regId);
      int deleted = stmt.executeUpdate();
      conn.close();

      if (deleted > 0) {
            JOptionPane.showMessageDialog(null, "Registration deleted successfully.");
            fetchRegistrations();
                } 
        else {
                    JOptionPane.showMessageDialog(null, "Deletion failed.");
                }

            } 
       catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            }
        }
    }

    private static void showUpdateRegistrationDialog() {
        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

        int result = JOptionPane.showConfirmDialog(null, scrollPane, "Select a Row to Update", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            int row = table.getSelectedRow();

            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row.");
                return;
            }

            int regId = (int) model.getValueAt(row, 0);
            String currentName = (String) model.getValueAt(row, 1);
            String currentEvent = (String) model.getValueAt(row, 2);
            String currentDate = model.getValueAt(row, 3).toString();
            String currentTime = model.getValueAt(row, 4).toString();

            JTextField nameField = new JTextField(currentName);
            JTextField eventField = new JTextField(currentEvent);
            JTextField dateField = new JTextField(currentDate);
            JTextField timeField = new JTextField(currentTime);

            JPanel panel = new JPanel(new GridLayout(4, 2));
            panel.add(new JLabel("Attendee Name:"));
            panel.add(nameField);
            panel.add(new JLabel("Event Name:"));
            panel.add(eventField);
            panel.add(new JLabel("Date (YYYY-MM-DD):"));
            panel.add(dateField);
            panel.add(new JLabel("Time (HH:MM:SS):"));
            panel.add(timeField);

            int confirm = JOptionPane.showConfirmDialog(null, panel, "Update Registration", JOptionPane.OK_CANCEL_OPTION);
            if (confirm == JOptionPane.OK_OPTION) {
                try {
                    String url = "jdbc:mysql://localhost:3306/eventdb?useSSL=false&serverTimezone=UTC";
                    String user = "root";
                    String password = "A@191005";

                    Connection conn = DriverManager.getConnection(url, user, password);

                    String query = "UPDATE event_registrations SET attendee_name=?, event_name=?, event_date=?, event_time=? WHERE registration_id=?";
                    PreparedStatement pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, nameField.getText());
                    pstmt.setString(2, eventField.getText());
                    pstmt.setDate(3, Date.valueOf(dateField.getText()));
                    pstmt.setTime(4, Time.valueOf(timeField.getText()));
                    pstmt.setInt(5, regId);

                    int updated = pstmt.executeUpdate();
                    conn.close();

                    if (updated > 0) {
                        JOptionPane.showMessageDialog(null, "Registration updated successfully.");
                        fetchRegistrations();
                    } else {
                        JOptionPane.showMessageDialog(null, "Update failed.");
                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
                }
            }
        }
    }
}
